<!doctype html>
<html lang="en">
<head>

<style>.async-hide { opacity: 0 !important} </style>
<script>(function(a,s,y,n,c,h,i,d,e){s.className+=' '+y;h.start=1*new Date;
h.end=i=function(){s.className=s.className.replace(RegExp(' ?'+y),'')};
(a[n]=a[n]||[]).hide=h;setTimeout(function(){i();h.end=null},c);h.timeout=c;
})(window,document.documentElement,'async-hide','dataLayer',0,
{'GTM-PK63XDQ':true});</script>

<script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
})(window,document,'script','dataLayer','GTM-PK63XDQ');</script>


<script async src="https://www.googletagmanager.com/gtag/js?id=AW-795492069"></script>
<script type="text/javascript">
    window.dataLayer = window.dataLayer || [];
    window.dataLayer.push({
        environment: 'production',
        userId: '',
        userEmail: ''
    });

    if (typeof gtag !== 'function') {
        function gtag() {
            dataLayer.push(arguments);
        }
    }

    gtag('js', new Date());
    gtag('config', 'AW-795492069');
</script>
<meta charset="utf-8">
<link rel="apple-touch-icon" href="/apple-touch-icon.png" />
<title>V Shred</title>
<meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=no">
<meta name="description" content="V Shred">
<meta name="csrf-token" content="zUky8FJWsqwONVwBcUxQ4UWpzrYN5v4G5bWDV6DO">
<meta name="first-page" content="244348741">
<meta name="last-page" content="244349395">
<link rel="stylesheet" href="/css/bootstrap4PaddingMargins.css">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0" />

<link href="https://maxcdn.bootstrapcdn.com/font-awesome/4.1.0/css/font-awesome.min.css" rel="stylesheet">
<link href="https://fonts.googleapis.com/css?family=Roboto+Condensed:400,700" rel="stylesheet">
<link href="https://fonts.googleapis.com/css?family=Lato:400,700,900" rel="stylesheet">
<link href="https://fonts.googleapis.com/css?family=Oswald:400,600,700" rel="stylesheet">
<link rel="stylesheet" href="/order-forms/02/css/bootstrap.css">
<link rel="stylesheet" href="/order-forms/02/css/slicknav.css">
<link rel="stylesheet" href="/order-forms/02/css/normalize.css">
<link rel="stylesheet" href="/order-forms/02/css/style.css">
<link rel="stylesheet" href="/order-forms/02/css/responsive.css">
<style type="text/css">
        .alert {
            margin-bottom: 1px;
            height: 30px;
            line-height: 30px;
            padding: 0 15px;
        }

        .error span {
            padding: 10px;
            display: block;
        }

        .no-input-icon input, .no-input-icon select {
            padding-left: 10px !important;
        }

        .no-input-icon::before {
            content: none;
            display: none;
        }
    </style>
<script type="text/javascript">
    !function (e) {
        if (!window.pintrk) {
            window.pintrk = function () {
                window.pintrk.queue.push(Array.prototype.slice.call(arguments))
            };
            var n = window.pintrk;
            n.queue = [], n.version = "3.0";
            var t = document.createElement("script");
            t.async = !0, t.src = e;
            var r = document.getElementsByTagName("script")[0];
            r.parentNode.insertBefore(t, r)
        }
    }("https://s.pinimg.com/ct/core.js");
</script>
<script type="text/javascript">
    pintrk('load', '2612596078505', {
        em: '',
    });
    pintrk('page');
</script>
<noscript><img height="1" width="1" style="display:none;" alt="" src="https://ct.pinterest.com/v3/?tid=2612596078505&noscript=1"/></noscript>
<script>window.pinterest_data = {"account_number":2612596078505,"order_quantity":1,"currency":"USD","price":74.99};</script><script type="text/javascript">
    !function (e) {
        if (!window.pintrk) {
            window.pintrk = function () {
                window.pintrk.queue.push(Array.prototype.slice.call(arguments))
            };
            var n = window.pintrk;
            n.queue = [], n.version = "3.0";
            var t = document.createElement("script");
            t.async = !0, t.src = e;
            var r = document.getElementsByTagName("script")[0];
            r.parentNode.insertBefore(t, r)
        }
    }("https://s.pinimg.com/ct/core.js");
</script><script>
    pintrk('track', 'AddToCart', {
        value: pinterest_data['price'],
        order_quantity: pinterest_data['order_quantity'],
        currency: pinterest_data['currency']
    });
</script>
<noscript>
    <img height="1" width="1" style="display:none;" alt="" src="https://ct.pinterest.com/v3/?tid=pinterest_data['account_number']&event=AddToCart&ed[value]=pinterest_data['price']&ed[order_quantity]=pinterest_data['order_quantity']&noscript=1" />
</noscript>
</head>
<body class="">

<noscript>
    <iframe src="https://www.googletagmanager.com/ns.html?id=GTM-PK63XDQ"
            height="0" width="0" style="display:none;visibility:hidden"
    ></iframe>
</noscript>

<main class="checkout-1712">
<header>
<div class="header-content">
<img src="/order-forms/02/img/header-arrow.png" alt="" class="header-arrow">
<a href="#" class="logo"><img src="/order-forms/02/img/logo.png" alt=""></a>
<h1>
Blender Bottle + Fat Loss Stack Bundle - Discounted <span>and FREE Bonuses</span>
</h1>
</div>
</header>
<div class="checkout-content">
<form action="#" class="form03" id="billing-form">
<input type="hidden" name="applied_coupon" id="applied_coupon" value="">
<input type="hidden" name="coupon_code" id="coupon_code" value=""> <div class="checkout-product-details">
<div class="text-center">
<h2>What You Get Today</h2>
</div>
<div class="product-details-content">
<div class="product-details-title">
<span>Item</span>
<span>Price</span>
</div>
<div class="product-details-text">
<div>
<p>
Blender Bottle + Fat Loss Stack Bundle - Discounted and FREE Bonuses
</p>
<div class="billing-item" data-base-price="74.99" data-price="74.99" data-description="Blender Bottle + Fat Loss Stack Bundle - Discounted" data-form="187" data-id="bun_blender_bottle_fls_discount_40" data-order-id="" data-special-offer="" data-special-offer-type="offers" data-route="member/orders" data-next="/sp/blender-bottle/move-cs" data-category="Step 1">
<ul>
<li>
<i class="fa fa-caret-right" data-item-id="blender_bottle_fls_discount_40" aria-hidden="true"></i>
FAT LOSS STACK
</li>
<li>
<i class="fa fa-caret-right" data-item-id="sku_blender_bottle" aria-hidden="true"></i>
V Shred Blender Bottle
</li>
<li>
<i class="fa fa-caret-right" data-item-id="bun_blender_bottle_fls_discount_40" aria-hidden="true"></i>
FREE Supplement Guide
</li>
</ul>
</div>
</div>
<p class="product-price">
$74.99 USD
One Time Payment
</p>
</div>
</div>
<div class="checkout-form-holder">
<div class="expand-area expand-area-1">
<div class="expand-area-title">
<h4>1. Contact Information</h4>
</div>
<div class="expand-inputs">
<div class="alert alert-danger" role="alert" id="name-error" style="display: none; height: auto">
<span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span>
<span class="sr-only">Error:</span>
<span id="name-error-text">Name is required</span>
</div>
<div class="single-input-field input-for-name">
<input type="text" id="name" name="name" placeholder="Enter Your Name" value="">
</div>
<div class="alert alert-danger" role="alert" id="email-error" style="display: none; height: auto">
<span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span>
<span class="sr-only">Error:</span>
<span id="email-error-text">Invalid email</span>
</div>
<div class="single-input-field input-for-email">
<input type="email" id="email" name="email" placeholder="Enter Your Email" value="">
</div>
<span class="next-step button-one" test-id="next-step-button-one">Next Step</span>
</div>
</div> 
</div>
<div class="checkout-form-holder">
<div class="expand-area expand-area-2">
<div class="expand-area-title">
<h4>2. Shipping Address</h4>
</div>
<div class="expand-inputs close-input">
<div class="alert alert-danger" role="alert" id="shipping_name-error" style="display: none; height: auto">
<span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span>
<span class="sr-only">Error:</span>
<span id="shipping_name-error-text">Name is required</span>
</div>
<div class="no-input-icon single-input-field input-for-shipping_name">
<input type="text" id="shipping_name" name="shipping_name" placeholder="Name">
</div>
<div class="alert alert-danger" role="alert" id="shipping_street1-error" style="display: none; height: auto">
<span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span>
<span class="sr-only">Error:</span>
<span id="shipping_street1-error-text">Invalid address</span>
</div>
<div class="no-input-icon single-input-field input-for-shipping_street1">
<input type="text" id="shipping_street1" name="shipping_street1" placeholder="Address Line 1" value="">
</div>
<div class="alert alert-danger" role="alert" id="shipping_street2-error" style="display: none; height: auto">
<span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span>
<span class="sr-only">Error:</span>
<span id="shipping_street2-error-text">Invalid address</span>
</div>
<div class="no-input-icon single-input-field input-for-shipping_street2">
<input type="text" id="shipping_street2" name="shipping_street2" placeholder="Address Line 2" value="">
</div>
<div class="alert alert-danger" role="alert" id="shipping_city-error" style="display: none; height: auto">
<span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span>
<span class="sr-only">Error:</span>
<span id="shipping_city-error-text">Invalid city</span>
</div>
<div class="no-input-icon single-input-field input-for-shipping_city">
<input type="text" id="shipping_city" name="shipping_city" placeholder="City" value="">
</div>
<div class="alert alert-danger" role="alert" id="shipping_state-error" style="display: none; height: auto">
<span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span>
<span class="sr-only">Error:</span>
<span id="shipping_state-error-text">Invalid state / province / region</span>
</div>
<div class="no-input-icon single-input-field input-for-shipping_state">
<input type="text" id="shipping_state" name="shipping_state" placeholder="State / Province / Region" value="">
</div>
<div class="alert alert-danger" role="alert" id="shipping_postal_code-error" style="display: none; height: auto">
<span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span>
<span class="sr-only">Error:</span>
<span id="shipping_postal_code-error-text">Invalid state / province / region</span>
</div>
<div class="no-input-icon single-input-field input-for-shipping_postal_code">
<input type="text" id="shipping_postal_code" name="shipping_postal_code" placeholder="Zip or Postal Code" value="">
</div>
<div class="alert alert-danger" role="alert" id="shipping_country-error" style="display: none; height: auto">
<span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span>
<span class="sr-only">Error:</span>
<span id="shipping_country-error-text">Invalid country</span>
</div>
<div class="no-input-icon single-input-field input-for-shipping_country">
<select id="shipping_country" name="shipping_country" style="padding-left: 65px;">
<option value="" selected="selected">(Country)</option>
<option value="US">United States</option>
<option value="CA">Canada</option>
<option value="GB">United Kingdom</option>
<option value="AF">Afghanistan</option>
<option value="AX">Åland Islands</option>
<option value="AL">Albania</option>
<option value="DZ">Algeria</option>
<option value="AS">American Samoa</option>
<option value="AD">Andorra</option>
<option value="AO">Angola</option>
<option value="AI">Anguilla</option>
<option value="AQ">Antarctica</option>
<option value="AG">Antigua and Barbuda</option>
<option value="AR">Argentina</option>
<option value="AM">Armenia</option>
<option value="AW">Aruba</option>
<option value="AU">Australia</option>
<option value="AT">Austria</option>
<option value="AZ">Azerbaijan</option>
<option value="BS">Bahamas</option>
<option value="BH">Bahrain</option>
<option value="BD">Bangladesh</option>
<option value="BB">Barbados</option>
<option value="BY">Belarus</option>
<option value="BE">Belgium</option>
<option value="BZ">Belize</option>
<option value="BJ">Benin</option>
<option value="BM">Bermuda</option>
<option value="BT">Bhutan</option>
<option value="BO">Bolivia, Plurinational State of</option>
<option value="BQ">Bonaire, Sint Eustatius and Saba</option>
<option value="BA">Bosnia and Herzegovina</option>
<option value="BW">Botswana</option>
<option value="BV">Bouvet Island</option>
<option value="BR">Brazil</option>
<option value="IO">British Indian Ocean Territory</option>
<option value="BN">Brunei Darussalam</option>
<option value="BG">Bulgaria</option>
<option value="BF">Burkina Faso</option>
<option value="BI">Burundi</option>
<option value="KH">Cambodia</option>
<option value="CM">Cameroon</option>
<option value="CA">Canada</option>
<option value="CV">Cape Verde</option>
<option value="KY">Cayman Islands</option>
<option value="CF">Central African Republic</option>
<option value="TD">Chad</option>
<option value="CL">Chile</option>
<option value="CN">China</option>
<option value="CX">Christmas Island</option>
<option value="CC">Cocos (Keeling) Islands</option>
 <option value="CO">Colombia</option>
<option value="KM">Comoros</option>
<option value="CG">Congo</option>
<option value="CD">Congo, the Democratic Republic of the</option>
<option value="CK">Cook Islands</option>
<option value="CR">Costa Rica</option>
<option value="CI">Côte d&#039;Ivoire</option>
<option value="HR">Croatia</option>
<option value="CU">Cuba</option>
<option value="CW">Curaçao</option>
<option value="CY">Cyprus</option>
<option value="CZ">Czech Republic</option>
<option value="DK">Denmark</option>
<option value="DJ">Djibouti</option>
<option value="DM">Dominica</option>
<option value="DO">Dominican Republic</option>
<option value="EC">Ecuador</option>
<option value="EG">Egypt</option>
<option value="SV">El Salvador</option>
<option value="GQ">Equatorial Guinea</option>
<option value="ER">Eritrea</option>
<option value="EE">Estonia</option>
<option value="ET">Ethiopia</option>
<option value="FK">Falkland Islands (Malvinas)</option>
<option value="FO">Faroe Islands</option>
<option value="FJ">Fiji</option>
<option value="FI">Finland</option>
<option value="FR">France</option>
<option value="GF">French Guiana</option>
<option value="PF">French Polynesia</option>
<option value="TF">French Southern Territories</option>
 <option value="GA">Gabon</option>
<option value="GM">Gambia</option>
<option value="GE">Georgia</option>
<option value="DE">Germany</option>
<option value="GH">Ghana</option>
<option value="GI">Gibraltar</option>
<option value="GR">Greece</option>
<option value="GL">Greenland</option>
<option value="GD">Grenada</option>
<option value="GP">Guadeloupe</option>
<option value="GU">Guam</option>
<option value="GT">Guatemala</option>
<option value="GG">Guernsey</option>
<option value="GN">Guinea</option>
<option value="GW">Guinea-Bissau</option>
<option value="GY">Guyana</option>
<option value="HT">Haiti</option>
<option value="HM">Heard Island and McDonald Islands</option>
<option value="VA">Holy See (Vatican City State)</option>
<option value="HN">Honduras</option>
<option value="HK">Hong Kong</option>
<option value="HU">Hungary</option>
<option value="IS">Iceland</option>
<option value="IN">India</option>
<option value="ID">Indonesia</option>
<option value="IR">Iran, Islamic Republic of</option>
<option value="IQ">Iraq</option>
<option value="IE">Ireland</option>
<option value="IM">Isle of Man</option>
<option value="IL">Israel</option>
<option value="IT">Italy</option>
<option value="JM">Jamaica</option>
<option value="JP">Japan</option>
<option value="JE">Jersey</option>
<option value="JO">Jordan</option>
<option value="KZ">Kazakhstan</option>
<option value="KE">Kenya</option>
<option value="KI">Kiribati</option>
<option value="KP">Korea, Democratic People&#039;s Republic of</option>
<option value="KR">Korea, Republic of</option>
<option value="KW">Kuwait</option>
<option value="KG">Kyrgyzstan</option>
<option value="LA">Lao People&#039;s Democratic Republic</option>
<option value="LV">Latvia</option>
<option value="LB">Lebanon</option>
<option value="LS">Lesotho</option>
<option value="LR">Liberia</option>
<option value="LY">Libya</option>
<option value="LI">Liechtenstein</option>
<option value="LT">Lithuania</option>
<option value="LU">Luxembourg</option>
<option value="MO">Macao</option>
<option value="MK">Macedonia, the former Yugoslav Republic of</option>
<option value="MG">Madagascar</option>
<option value="MW">Malawi</option>
<option value="MY">Malaysia</option>
<option value="MV">Maldives</option>
<option value="ML">Mali</option>
<option value="MT">Malta</option>
<option value="MH">Marshall Islands</option>
<option value="MQ">Martinique</option>
<option value="MR">Mauritania</option>
<option value="MU">Mauritius</option>
<option value="YT">Mayotte</option>
<option value="MX">Mexico</option>
<option value="FM">Micronesia, Federated States of</option>
<option value="MD">Moldova, Republic of</option>
<option value="MC">Monaco</option>
<option value="MN">Mongolia</option>
<option value="ME">Montenegro</option>
<option value="MS">Montserrat</option>
<option value="MA">Morocco</option>
<option value="MZ">Mozambique</option>
<option value="MM">Myanmar</option>
<option value="NA">Namibia</option>
<option value="NR">Nauru</option>
<option value="NP">Nepal</option>
<option value="NL">Netherlands</option>
<option value="NC">New Caledonia</option>
<option value="NZ">New Zealand</option>
<option value="NI">Nicaragua</option>
<option value="NE">Niger</option>
<option value="NG">Nigeria</option>
<option value="NU">Niue</option>
<option value="NF">Norfolk Island</option>
<option value="MP">Northern Mariana Islands</option>
<option value="NO">Norway</option>
<option value="OM">Oman</option>
<option value="PK">Pakistan</option>
<option value="PW">Palau</option>
<option value="PS">Palestinian Territory, Occupied</option>
<option value="PA">Panama</option>
<option value="PG">Papua New Guinea</option>
<option value="PY">Paraguay</option>
 <option value="PE">Peru</option>
<option value="PH">Philippines</option>
<option value="PN">Pitcairn</option>
<option value="PL">Poland</option>
<option value="PT">Portugal</option>
<option value="PR">Puerto Rico</option>
<option value="QA">Qatar</option>
<option value="RE">Réunion</option>
<option value="RO">Romania</option>
<option value="RU">Russian Federation</option>
<option value="RW">Rwanda</option>
<option value="BL">Saint Barthélemy</option>
<option value="SH">Saint Helena, Ascension and Tristan da Cunha</option>
<option value="KN">Saint Kitts and Nevis</option>
<option value="LC">Saint Lucia</option>
<option value="MF">Saint Martin (French part)</option>
<option value="PM">Saint Pierre and Miquelon</option>
<option value="VC">Saint Vincent and the Grenadines</option>
<option value="WS">Samoa</option>
<option value="SM">San Marino</option>
<option value="ST">Sao Tome and Principe</option>
<option value="SA">Saudi Arabia</option>
<option value="SN">Senegal</option>
<option value="RS">Serbia</option>
<option value="SC">Seychelles</option>
<option value="SL">Sierra Leone</option>
<option value="SG">Singapore</option>
<option value="SX">Sint Maarten (Dutch part)</option>
<option value="SK">Slovakia</option>
<option value="SI">Slovenia</option>
 <option value="SB">Solomon Islands</option>
<option value="SO">Somalia</option>
<option value="ZA">South Africa</option>
<option value="GS">South Georgia and the South Sandwich Islands</option>
<option value="SS">South Sudan</option>
<option value="ES">Spain</option>
<option value="LK">Sri Lanka</option>
<option value="SD">Sudan</option>
<option value="SR">Suriname</option>
<option value="SJ">Svalbard and Jan Mayen</option>
<option value="SZ">Swaziland</option>
<option value="SE">Sweden</option>
<option value="CH">Switzerland</option>
<option value="SY">Syrian Arab Republic</option>
<option value="TW">Taiwan, Province of China</option>
<option value="TJ">Tajikistan</option>
<option value="TZ">Tanzania, United Republic of</option>
<option value="TH">Thailand</option>
<option value="TL">Timor-Leste</option>
<option value="TG">Togo</option>
<option value="TK">Tokelau</option>
<option value="TO">Tonga</option>
<option value="TT">Trinidad and Tobago</option>
<option value="TN">Tunisia</option>
<option value="TR">Turkey</option>
<option value="TM">Turkmenistan</option>
<option value="TC">Turks and Caicos Islands</option>
<option value="TV">Tuvalu</option>
<option value="UG">Uganda</option>
<option value="UA">Ukraine</option>
<option value="AE">United Arab Emirates</option>
 <option value="GB">United Kingdom</option>
<option value="US">United States</option>
<option value="UM">United States Minor Outlying Islands</option>
<option value="UY">Uruguay</option>
<option value="UZ">Uzbekistan</option>
<option value="VU">Vanuatu</option>
<option value="VE">Venezuela, Bolivarian Republic of</option>
<option value="VN">Viet Nam</option>
<option value="VG">Virgin Islands, British</option>
<option value="VI">Virgin Islands, U.S.</option>
<option value="WF">Wallis and Futuna</option>
<option value="EH">Western Sahara</option>
<option value="YE">Yemen</option>
<option value="ZM">Zambia</option>
<option value="ZW">Zimbabwe</option>
</select>
</div>
<div class="alert alert-danger" role="alert" id="shipping_phone-error" style="display: none; height: auto">
<span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span>
<span class="sr-only">Error:</span>
<span id="shipping_phone-error-text">Invalid phone number</span>
</div>
<div class="no-input-icon single-input-field input-for-phone">
<input type="text" id="shipping_phone" name="shipping_phone" placeholder="Phone Number" required value="">
</div>
<span class="next-step button-two">Next Step</span>
</div>
</div> 
<div class="expand-area  expand-area-3 ">
<div class="expand-area-title">
<h4>3. Payment Information</h4>
</div>
<div class="expand-inputs close-input close-input">
<div class="form-group">
<div id="card-element"></div>
</div>
<span class="next-step button-two" test-id="next-step-button-two">Next Step</span>
</div>
</div> 
<div class="expand-area-4">
<div class="expand-area-title">
 <h4>4. Order Summary</h4>
</div>
<div class="expand-inputs close-input">
<div class="checkbox-area">
<img src="/order-forms/02/img/arrow-flash-small.gif" alt="">
<input type="checkbox" id="checkbox" name="special_offer" value="spo_5f4d50ec8ea44">
<label for="checkbox" test-id="bumper-checkbox">SPECIAL OFFER!</label>
</div>
<p style="text-align: left;"><span class="red-title m-0">For a limited time we are running a special offer on a Custom Diet Plan!</span> Why? Because managing your diet is THE most DIFFICULT and yet THE most IMPORTANT task when losing weight. In fact, your diet is responsible for 80% of your results. But your dietary needs to change… as your body changes. If you don’t keep up with adjusting all your calculations… you’re 4X more likely to end up right where you started. Which sucks. So… DELEGATE YOUR DIET to one of our Expert Trainers. They’ll give you a customized shopping list and meal plan on a silver platter. You provide your goals, your numbers, your tastes and preferences… and they do all the hard work FOR you. The hardest part of losing weight… becomes the easiest part… when you delegate your diet to one of our Expert Endomorph Trainers.<br><br>No confusion. No counting calories. No weighing your food. We do it ALL for you. This can give you 4X better results. Ready to add this custom service to your order? If so, here’s a 75% discount...<br><br>(8/10 of New Customers choose this option)<div class=\"red-title\">LET US DO ALL THE WORK OF CREATING THE PERFECT DIET FOR YOU -- FOR ONLY AN EXTRA $199… $49 TODAY ONLY WITH YOUR NEW CUSTOMER DISCOUNT!</div></p>
<br />
</div>
<div class="expand-inputs close-input close-input" style="display: none; border: 0; margin: 0; padding: 0;">
<div style="padding: 1em; border-radius: .5em; border: 1px solid #CCC; margin:15px 25px">
<h3 style="text-align: center; border-bottom: 1px solid #CCC">Order Summary</h3>
<table style="width: 100%;">
<thead>
<tr>
<th style="border-bottom: 1px solid #CCC">Product</th>
<th style="border-bottom: 1px solid #CCC">Quantity</th>
<th style="border-bottom: 1px solid #CCC">Price</th>
</tr>
</thead>
<tr style="vertical-align:  top; ">
<td style="text-align: left;">
Blender Bottle + Fat Loss Stack Bundle - Discounted
</td>
<td style="text-align: left;"> 1 </td>
<td style="text-align: left;">
<span style="">$74.99</span>
</td>
</tr>
<tr id="order-summary-special-offer" style="vertical-align: top; display: none" data-price="49">
<td style="text-align: left;">Custom Diet Plan</td>
<td style="text-align: left;">1</td>
<td style="text-align: left;">
<span style="">
<span>$49.00</span>
</span>
</td>
</tr>
<tfoot>
<tr>
<th colspan="2" style="text-align: right; border-top: 1px solid #CCC; padding-top:8px; padding-right:5px">Total:</th>
<th style="text-align:left; border-top: 1px solid #CCC; padding-top:8px" id="order-summary-total" data-base-total="74.99">
$74.99 </th>
</tr>
</tfoot>
</table>
</div>
<div class="text-center">
<button type="submit" id="submit-order" class="next-step button-one" test-id="submit-order-button">Submit Order</button>
<div class="col-xs-12">
<div class="error text-danger text-center" role="alert"></div>
</div>
</div>
</div>
</div> 
<div class="text-center">
<p>Secure Order Form - 100% Protected &amp; Safe</p>
<img src="/order-forms/02/img/card.png" alt="">
</div>
</div> 
</div>
<div class="container">
<div class="logos-area">
<img src="/order-forms/02/img/guarantee.png" alt="">
<img src="/order-forms/02/img/logo-2.png" alt="">
<img src="/order-forms/02/img/logo-3.png" alt="">
</div>
<div class="bottom-content">
<div class="row">
<div class="col-xs-12 col-sm-6">
<div class="bottom-content-text">
<div class="bottom-content-img-holder">
<img src="/order-forms/02/img/logo-4.png" alt="">
</div>
<h3>100% Risk free</h3>
<p>
If you decide that the program isn’t right for you, just let us know and you’ll be issued a full and prompt refund, no
questions asked.
</p>
</div>
</div>
<div class="col-xs-12 col-sm-6">
<div class="bottom-content-text">
<div class="bottom-content-img-holder">
<img src="/order-forms/02/img/logo-5.png" alt="">
</div>
<h3>Credit Card Info is 100% Safe</h3>
<p>All orders are through an SSL secure network. Your credit card information is never stored in any way. We respect your privacy.</p>
</div>
</div>
</div>
</div>
</div>
</form>
</div>
</main>
<!--[if IE]>
    <script src="http://html5shiv.googlecode.com/svn/trunk/html5.js"></script><![endif]-->
<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js"></script>
<script>window.jQuery || document.write('<script src="/order-forms/01/js/vendor/jquery-1.10.2.min.js"><\/script>')</script>
<script src="/order-forms/01/js/bootstrap.min.js"></script>
<script src="/order-forms/02/js/modernizr-2.6.2.min.js"></script>
<script src="/order-forms/02/js/plugins.js"></script>
<script src="/order-forms/02/js/main.js"></script>
<script>
        let checkout = {
            provider: {},
            data: {
                orders: {},
                user: null,
                token: null,
                creatingSource: false,
                creatingToken: false,
                creationIntervals: {},
                lastErrorType: null 
            },
            unknownErrorMessage: 'An unknown error occurred. Please email <a href="mailto:support@vshred.com?subject=Purchase+error">support@vshred.com</a> for help.',
            defaultPayBtnText: null,
            baseRoute: null,
            $appliedCoupon: null,
            $form: null,
            $item: null,
            $error: null,
            $success: null,
            $payBtn: null,
            $email: null,
            $phone: null,
            $firstName: null,
            $lastName: null,
            $name: null,
            
            init: (provider, form, item) => {
                checkout.provider = provider;
                checkout.$productDetails = $('.checkout-product-details');
                checkout.$form = $(form);
                checkout.$item = $(item);
                checkout.baseRoute = '/' + checkout.$item.data('route') + '/';
                checkout.$appliedCoupon = $('#applied_coupon');
                checkout.$error = $('.error', checkout.$form);
                checkout.$success = $('.success', checkout.$form);
                checkout.$payBtn = $('button[type=submit]', checkout.$form);
                checkout.$email = $('input[name=email]', checkout.$form);
                checkout.$phone = $('input[name=phone]', checkout.$form);
                checkout.$firstName = $('#fname');
                checkout.$lastName = $('#lname');
                checkout.$name = $('#name');
                checkout.$shippingName = $('#shipping_name');
                checkout.$shippingStreet1 = $('#shipping_street1');
                checkout.$shippingStreet2 = $('#shipping_street2');
                checkout.$shippingCity = $('#shipping_city');
                checkout.$shippingState = $('#shipping_state');
                checkout.$shippingPostalCode = $('#shipping_postal_code');
                checkout.$shippingCountry = $('#shipping_country');
                checkout.$shippingPhone = $('#shipping_phone');
                checkout.defaultPayBtnText = checkout.$payBtn.text();
                checkout.attachFormSubmissionListener();
            },
            
            initOrder: items => {
                if (!(items in checkout.data.orders)) {
                    checkout.data.orders[items] = {
                        creating: false,
                        failed: false,
                        id: null
                    };
                }
            },
            
            order: (items, key) => {
                checkout.initOrder(items);

                if (key != null) {
                    return checkout.data.orders[items][key];
                }
                return checkout.data.orders[items];
            },
            isOrderPage: () => checkout.$item.data('route') === 'member/orders',
            
            token: result => {
                if (result != null) {
                    if (result.error) {
                        checkout.handleError(result.error.message ? result.error.message : result.error);
                        checkout.lastErrorType('declined');

                        return false;
                    } else if (result.token) {
                        checkout.data.token = result.token.id;
                    }
                }

                return checkout.data.token;
            },
            
            invalidateToken: () => {
                checkout.data.token = null;
            },
            
            tokenExtraDetails: () => new Object({
                email: checkout.$email.val(),
                phone: checkout.$phone.val(),
                name: checkout.customerName()
            }),
            
            tokenThen: (resolve, reject) => checkout.provider.tokenThen(resolve, reject),
            
            customer: user_id => {
                if (user_id != null) {
                    checkout.data.user = user_id;
                }

                return checkout.data.user;
            },
            
            customerName: () => {
                let name = '';

                if (checkout.$name.val()) {
                    name = checkout.$name.val();
                } else {
                    if (checkout.$firstName.val()) {
                        name = checkout.$firstName.val();
                    }

                    if (checkout.$lastName.val()) {
                        if (name !== '') {
                            name += ' ';
                        }

                        name += checkout.$lastName.val();
                    }
                }

                return name;
            },
            
            orderCreationUrl: () => checkout.provider.orderCreationUrl(),
            
            orderCompletionUrl: () => checkout.provider.orderCompletionUrl(),
            
            sourceCreationUrl: () => checkout.provider.sourceCreationUrl(),
            
            subscriptionUrl: () => checkout.provider.subscriptionUrl(),
            
            itemsSlug: () => checkout.$item.data('id') + '/' + (!checkout.isSpecialOfferPlan() ? checkout.$item.data('special-offer') : ''),
            
            formParams: () => {
                let params = {};

                params["_token"] = "zUky8FJWsqwONVwBcUxQ4UWpzrYN5v4G5bWDV6DO";

                
                
                ['next', 'form', 'category'].forEach(item => {
                    if (checkout.$item.data(item)) {
                        params[item] = checkout.$item.data(item);
                    }
                });

                params['email'] = checkout.$email.val();
                params['phone'] = checkout.$phone.val();
                params['fname'] = checkout.$firstName.val();
                params['lname'] = checkout.$lastName.val();
                params['shipping_name'] = checkout.$shippingName.val();
                params['shipping_street1'] = checkout.$shippingStreet1.val();
                params['shipping_street2'] = checkout.$shippingStreet2.val();
                params['shipping_city'] = checkout.$shippingCity.val();
                params['shipping_state'] = checkout.$shippingState.val();
                params['shipping_postal_code'] = checkout.$shippingPostalCode.val();
                params['shipping_country'] = checkout.$shippingCountry.val();
                params['shipping_phone'] = checkout.$shippingPhone.val();

                if ($('input[name=eu_marketing_consent]').prop('checked')) {
                    params['eu_marketing_consent'] = '1';
                }

                if (checkout.$appliedCoupon && checkout.$appliedCoupon.val()) {
                    params['cpn'] = checkout.$appliedCoupon.val();
                }

                if (checkout.$name.val() && !checkout.$firstName.val() && !checkout.$lastName.val()) {
                    let _name = checkout.customerName().split(' ');

                    if (_name.length > 0) {
                        params['fname'] = _name.shift();
                    }

                    if (_name.length > 0) {
                        params['lname'] = _name.join(' ');
                    }
                }

                if (checkout.provider.hasOwnProperty('formParams')) {
                    params = {...checkout.provider.formParams(), ...params};
                }

                return JSON.stringify(params);
            },
            
            validateOrderForm: () => {
                if ($('input[name=agree]', checkout.$form).length && !$('input[name=agree]', checkout.$form).prop('checked')) {
                    checkout.toggleErrorMessage('You must agree to the payment terms before subscribing.');

                    return false;
                } else if (jQuery.trim(checkout.$email.val()) === '') {
                    checkout.toggleErrorMessage('An email is required to sign-up.');

                    return false;
                }

                return true;
            },
            
            isSpecialOfferPlan: () => checkout.$item.data('special-offer-type') === 'plans',
            
            createOrder: () => {
                const items = checkout.itemsSlug();
                checkout.creationInterval('order', () => {
                    
                    if (!checkout.creatingAnyOrder() && !checkout.createdOrder(items)) {
                        checkout.creatingOrder(items, true);
                        checkout.clearCreationInterval('order');
                        // checkout.invalidateToken();r

                        const createOrderFunc = () => {
                            window.dispatchEvent(new CustomEvent('create_order_start'));

                            $.ajax(checkout.orderCreationUrl(), {
                                method: 'POST',
                                dataType: 'json',
                                contentType: 'application/json',
                                data: checkout.formParams()
                            }).done(data => {
                                if (data.success) {
                                    checkout.createdOrder(items, data.order_id, data.user_id);
                                    checkout.toggleErrorMessage();
                                } else {
                                    checkout.handleError(data.error);
                                }
                            }).fail((jqXHR, textStatus, error) => {
                                checkout.handleError(jqXHR, textStatus, error);
                                checkout.createdOrder(items, false);
                            }).always(() => {
                                checkout.creatingOrder(items, false);
                                window.dispatchEvent(new CustomEvent('create_order_end'));
                            });
                        };

                        if (checkout.createdAnyOrder()) {
                            
                            createOrderFunc();
                        } else {
                            checkout.tokenThen(createOrderFunc, () => checkout.creatingOrder(items, false));
                        }
                    }
                });
            },
            
            createdOrder: (items, order_id, user_id) => {
                let order = checkout.order(items);

                if (typeof order_id === 'string') {
                    order.creating = false;
                    order.failed = false;
                    order.id = order_id;
                    checkout.customer(user_id);
                    checkout.$item.data('order-id', order_id);
                } else if (order_id === false) {
                    order.creating = false;
                    order.id = null;
                    order.failed = true;
                }
                return order && order.id != null;
            },
            
            creatingOrder: (items, creating) => {
                let order = checkout.order(items);

                if (creating != null) {
                    order.creating = creating;
                }

                return order && order.creating;
            },
            
            creatingAnyOrder: () => {
                for (let key in checkout.data.orders) {
                    if (checkout.data.orders[key].creating) {
                        return true;
                    }
                }

                return false;
            },
            
            createdAnyOrder: () => {
                for (let key in checkout.data.orders) {
                    if (checkout.data.orders[key].created) {
                        return true;
                    }
                }

                return false;
            },
            
            creatingToken: creating => {
                if (creating !== undefined) {
                    checkout.data.creatingToken = creating;
                }

                return checkout.data.creatingToken;
            },
            
            submitPurchase: url => {
                if (!checkout.validateOrderForm()) {
                    return false;
                }
                window.dispatchEvent(new CustomEvent('submit_purchase_start'));
                $.ajax(url, {
                    method: 'POST',
                    dataType: 'json',
                    contentType: 'application/json',
                    data: checkout.formParams()
                }).fail(checkout.handleError)
                    .always(() => window.dispatchEvent(new CustomEvent('submit_purchase_end')))
                    .done(data => {
                        if (data.next) {
                            window.location.href = data.next;
                        } else if (data.confirmation) {
                            window.location.href = data.confirmation;
                        } else if (data.success) {
                            checkout.toggleErrorMessage();
                            checkout.customResultHandler('success', data);
                            checkout.toggleSuccessMessage(data.success);
                            checkout.toggleFormState(true);

                            setTimeout(() => {
                                checkout.resetResultMessages();
                            }, 5000);
                        } else {
                            checkout.handleError(data.error);
                        }
                    });
            },
            
            creationInterval: (name, func) => {
                if (func != null) {
                    if (name in checkout.data.creationIntervals) {
                        
                        clearInterval(checkout.data.creationIntervals[name]);
                    }
                    checkout.data.creationIntervals[name] = setInterval(func, 100);
                }

                return checkout.data.creationIntervals[name];
            },
            clearCreationInterval: (name) => {
                if (name) {
                    clearInterval(checkout.data.creationIntervals[name]);
                    delete checkout.data.creationIntervals[name];
                }
            },
            
            createSource: () => {
                checkout.creationInterval('source', () => {
                    
                    if (checkout.customer() && !checkout.creatingSource() && !checkout.creatingAnyOrder()) {
                        checkout.creatingSource(true);
                        checkout.clearCreationInterval('source');
                        checkout.invalidateToken();

                        checkout.tokenThen(() => {
                            window.dispatchEvent(new CustomEvent('create_source_start'));

                            $.ajax(checkout.sourceCreationUrl(), {
                                method: 'POST',
                                dataType: 'json',
                                contentType: 'application/json',
                                data: checkout.formParams()
                            }).done(data => {
                                if (data.success) {
                                    checkout.toggleErrorMessage();
                                } else {
                                    checkout.handleError(data.error);
                                }
                            })
                                .fail(checkout.handleError)
                                .always(() => {
                                    checkout.creatingSource(false);
                                    window.dispatchEvent(new CustomEvent('create_source_start'));
                                });
                        }, () => checkout.creatingSource(false));
                    }
                });
            },
            
            creatingSource: creating => {
                if (creating != null) {
                    checkout.data.creatingSource = creating;
                }

                return checkout.data.creatingSource;
            },
            
            toggleFormState: enabled => {
                if (enabled) {
                    checkout.$payBtn.prop('disabled', false).text(checkout.defaultPayBtnText);
                    checkout.$productDetails.css('opacity', '');
                } else {
                    checkout.$payBtn.prop('disabled', true);
                    checkout.$payBtn.html(`<i class='fa fa-spinner fa-spin'></i> Please wait...`);
                    checkout.$productDetails.css('opacity', 0.5);
                }
            },
            
            resetResultMessages: () => {
                checkout.$error.html('').removeClass('visible').hide();
                checkout.$success.text('').removeClass('visible').hide();
            },
            resetOrderStatus: () => {
                let order = checkout.order(checkout.itemsSlug());
                order.failed = false;
            },
            
            toggleSuccessMessage: message => {
                if (message == null) {
                    checkout.$success.text('').removeClass('visible').hide();
                } else {
                    checkout.$success.text(message).addClass('visible').show();
                }
            },
            
            toggleErrorMessage: message => {
                if (message == null) {
                    checkout.$error.html('').removeClass('visible').hide();
                } else {
                    checkout.$error.html('<span>' + message + '</span>').addClass('visible').show();
                }
            },
            
            customResultHandler: (type, data) => {
                if (checkout.$item.data(type) && typeof window[checkout.$item.data(type)] === 'function') {
                    window[checkout.$item.data(type)](data);
                }
            },
            
            lastErrorType: type => {
                if (type != null) {
                    checkout.data.lastErrorType = type;
                    window.dispatchEvent(new CustomEvent('checkout_error.' + type));
                }

                return checkout.data.lastErrorType;
            },
            
            handleError: (jqXHR, textStatus, error) => {
                if (jqXHR == null) {
                    return; // No error.
                }

                if (typeof jqXHR === 'string') {
                    error = jqXHR;
                } else if (jqXHR.responseJSON) {
                    checkout.lastErrorType(jqXHR.responseJSON.type);

                    if (!error && jqXHR.responseJSON.error) {
                        error = jqXHR.responseJSON.error;
                    } else if (!error && jqXHR.responseJSON.message) {
                        error = jqXHR.responseJSON.message;
                    }
                }

                if (textStatus !== 'error' && textStatus != null && textStatus !== error) {
                    if (error) {
                        error += ' (' + textStatus + ')';
                    } else {
                        error = textStatus;
                    }
                }

                checkout.customResultHandler('error', jqXHR);

                if (jqXHR.status === 402 || checkout.lastErrorType() === 'declined') {
                    checkout.toggleErrorMessage('Problem with your card: ' + error);
                } else {
                    if (error) {
                        checkout.toggleErrorMessage(
                            error +
                            ' Please email <a href="mailto:support@vshred.com?subject=' +
                            encodeURIComponent((checkout.$item.data('description') ? checkout.$item.data('description') + ' purchase' : 'Purchase') + ' error') +
                            '">support@vshred.com</a> if you need help.'
                        );
                    } else {
                        checkout.toggleErrorMessage(checkout.unknownErrorMessage);
                    }
                }

                
                checkout.toggleFormState(true);
            },
            changeCard: () => {
                checkout.resetResultMessages();
                checkout.invalidateToken();
                
                if (checkout.isOrderPage()) {
                    if (checkout.createdOrder(checkout.itemsSlug()) || checkout.creatingOrder(checkout.itemsSlug())) {
                        
                        checkout.createSource();
                    } else {
                        checkout.createOrder();
                    }
                }
            },
            attachFormSubmissionListener: () => {
                
                checkout.$form.on('submit', e => {
                    e.preventDefault();
                    checkout.resetResultMessages();
                    checkout.resetOrderStatus();
                    checkout.toggleFormState(false);

                    
                    checkout.creationInterval('purchase', () => {
                        if (checkout.creatingSource() || checkout.creatingAnyOrder() || checkout.creatingToken()) {
                            return;
                        }
                        if (checkout.isOrderPage()) {
                            if (checkout.createdOrder(checkout.itemsSlug())) {
                                checkout.clearCreationInterval('purchase');
                                checkout.submitPurchase(checkout.orderCompletionUrl());
                            } else {
                                if (checkout.order(checkout.itemsSlug(), 'failed')) {
                                    
                                    checkout.clearCreationInterval('purchase');
                                } else {
                                    if (checkout.creationInterval('order') == undefined) {
                                        checkout.createOrder();
                                    }
                                }
                            }
                        } else {
                            checkout.clearCreationInterval('purchase');
                            checkout.tokenThen(() => checkout.submitPurchase(checkout.subscriptionUrl()), () => console.log('No token available with which to submit purchase'));
                        }
                    });
                });
            }
        };
    </script>
<style type="text/css">
        .braintree-placeholder {
            display: none;
        }
		.braintree-loaded [data-braintree-id="sheet-container"]{
			-webkit-transition: max-height .6s ease-in-out, opacity .4s linear .2s;
			-moz-transition: max-height .6s ease-in-out, opacity .4s linear .2s;
			transition: max-height .6s ease-in-out, opacity .4s linear .2s;
		}
		.braintree-card.braintree-sheet {
			display: block;
			max-height: 0;
			opacity: 0;
			overflow: hidden;
			-webkit-transition: max-height 600ms ease-in-out, opacity .4s ease-in-out .2s;
			transition: max-height 600ms ease-in-out, opacity .4s ease-in-out .2s;
			transition: transform 600ms, max-height 600ms ease-in-out, opacity .4s ease-in-out .2;
			transition: transform 600ms, max-height 600ms ease-in-out, opacity .4s ease-in-out .2;
		}
		.braintree-large-button {
			max-height: 200px;
			opacity: 1;
			-webkit-transition: max-height 600ms ease-in-out .2s, opacity .4s linear .2s, padding .6s ease-in-out;
			-moz-transition: max-height 600ms ease-in-out .2s, opacity .4s linear .2s, padding .6s ease-in-out;
			transition: max-height 600ms ease-in-out .2s, opacity .4s linear .2s, padding .6s ease-in-out;
		}
		.braintree-large-button.braintree-hidden {
			display: block;
			max-height: 0;
			opacity: 0;
			overflow: hidden;
			padding: 0;
			-webkit-transition: max-height 600ms ease-in-out .2s, opacity .4s linear .2s, padding .6s ease-in-out;
			-moz-transition: max-height 600ms ease-in-out .2s, opacity .4s linear .2s, padding .6s ease-in-out;
			transition: max-height 600ms ease-in-out .2s, opacity .4s linear .2s, padding .6s ease-in-out;
		}
		.braintree-show-card .braintree-card {
			max-height: 1000px;
			opacity: 1;
		}
    </style>
<script type="text/javascript">
		
		$(document).ready(function() {
			$(window).keydown(function(event) {
				if (event.keyCode === 13) {
					event.preventDefault();
					return false;
				}
			});
		});
	</script>
<script src="https://js.braintreegateway.com/web/dropin/1.22.1/js/dropin.min.js"></script>
<script type="text/javascript">
		
		var showSummarySection = function() {
			setTimeout(function() {
				const area4 = $('.expand-area-4').find('.expand-inputs.close-input');
				if (area4.length === 0) {
					$('.expand-area-3').find('.expand-inputs.close-input').slideDown();
				} else {
					area4.slideDown();
				}
			}, 0);
		};
		var hideSummarySection = function() {
			
			var executed = false;
			return function() {
				if (!executed) {
					const area4 = $('.expand-area-4').find('.expand-inputs.close-input');
					if (area4.length === 0) {
						$('.expand-area-3').find('.expand-inputs.close-input').slideUp();
					} else {
						area4.slideUp();
					}
					executed = true;
				}
			}
		};

		

		(function() {
			let braintreeCreationAttempts = 0;
			let button = null;
			
			let checkoutForm = null;

			if (document.querySelector('#card-element').closest('div.expand-area').classList.contains('expand-area-2')) {
				button = document.querySelector('.expand-area-2 button.next-step')
					|| document.querySelector('.expand-area-2 span.next-step');
			} else {
				button = document.querySelector('.expand-area-3 span.next-step');
			}

			var requestPaymentMethod = function (err, payload) {
				checkout.creatingToken(true);
				window.dispatchEvent(new CustomEvent('create_token_start'));
				if (err) {
					checkout.toggleErrorMessage('Problem with your card: ' + err);
					checkout.creatingToken(false);
					window.dispatchEvent(new CustomEvent('create_token_end'));
					// throw new Error(err);
					return false;
				}

				const newCardToken = {
					...payload,
					error: err,
					token: {
						id: (payload && payload.hasOwnProperty('nonce') ? payload.nonce : null)
					}
				};
				checkout.creatingToken(false);
				window.dispatchEvent(new CustomEvent('create_token_end'));
				checkout.token(newCardToken);
				checkout.toggleErrorMessage(null);
				return true;
			}

			const braintreeProvider = {
				tokenThen: (resolve, reject) => {
					if (checkout.token()) {
						return resolve();
					}

					return reject();
				},
				
				orderCreationUrl: () => checkout.baseRoute + 'v2/create/' + (checkout.customer() || checkout.token()) + '/' + checkout.itemsSlug(),
				
				orderCompletionUrl: () => checkout.baseRoute + 'v2/complete/' + checkout.$item.data('order-id') + '/' + (checkout.isSpecialOfferPlan() ? checkout.$item.data('special-offer') : ''),
				
				sourceCreationUrl: () => checkout.baseRoute + 'v2/source/' + checkout.customer() + '/' + checkout.token(),
				
				subscriptionUrl: () => checkout.baseRoute + checkout.token() + '/' + checkout.$item.data('id'),
				formParams: () => {
					let params = {};
					params['driver'] = 'braintree';
					params['gateway'] = 'b';
					params['cv'] = '2';
					params['last_page'] = '244349395';
					return params;
				},
				init: () => {
					braintree.dropin.create({
						authorization: 'eyJ2ZXJzaW9uIjoyLCJhdXRob3JpemF0aW9uRmluZ2VycHJpbnQiOiJleUowZVhBaU9pSktWMVFpTENKaGJHY2lPaUpGVXpJMU5pSXNJbXRwWkNJNklqSXdNVGd3TkRJMk1UWXRjSEp2WkhWamRHbHZiaUlzSW1semN5STZJbWgwZEhCek9pOHZZWEJwTG1KeVlXbHVkSEpsWldkaGRHVjNZWGt1WTI5dEluMC5leUpsZUhBaU9qRTJNRFE1TURFMk1EUXNJbXAwYVNJNkltSXhNR1UxWkRRMExURTJPVFl0TkRZelpTMWlOR0V4TFRNNE1HSXlaVFkxTURjd05pSXNJbk4xWWlJNklqaHVPVzEyWTNacWFuazBNbVEyYm1zaUxDSnBjM01pT2lKb2RIUndjem92TDJGd2FTNWljbUZwYm5SeVpXVm5ZWFJsZDJGNUxtTnZiU0lzSW0xbGNtTm9ZVzUwSWpwN0luQjFZbXhwWTE5cFpDSTZJamh1T1cxMlkzWnFhbmswTW1RMmJtc2lMQ0oyWlhKcFpubGZZMkZ5WkY5aWVWOWtaV1poZFd4MElqcG1ZV3h6Wlgwc0luSnBaMmgwY3lJNld5SnRZVzVoWjJWZmRtRjFiSFFpWFN3aWMyTnZjR1VpT2xzaVFuSmhhVzUwY21WbE9sWmhkV3gwSWwwc0ltOXdkR2x2Ym5NaU9uc2liV1Z5WTJoaGJuUmZZV05qYjNWdWRGOXBaQ0k2SWxaVGFISmxaRXhNUTE5cGJuTjBZVzUwSW4xOS5UN2k1Qk1wbUsybklWaDFVeXhCUzgyc05DM3pRWDZUa2paZmRwWXZDbHlxejJYUXc3UzQzYmxoV1FtUzZEZG5ldkppXzBacVYzWEZBUFplZnRERlNqZyIsImNvbmZpZ1VybCI6Imh0dHBzOi8vYXBpLmJyYWludHJlZWdhdGV3YXkuY29tOjQ0My9tZXJjaGFudHMvOG45bXZjdmpqeTQyZDZuay9jbGllbnRfYXBpL3YxL2NvbmZpZ3VyYXRpb24iLCJtZXJjaGFudEFjY291bnRJZCI6IlZTaHJlZExMQ19pbnN0YW50IiwiZ3JhcGhRTCI6eyJ1cmwiOiJodHRwczovL3BheW1lbnRzLmJyYWludHJlZS1hcGkuY29tL2dyYXBocWwiLCJkYXRlIjoiMjAxOC0wNS0wOCIsImZlYXR1cmVzIjpbInRva2VuaXplX2NyZWRpdF9jYXJkcyJdfSwiY2xpZW50QXBpVXJsIjoiaHR0cHM6Ly9hcGkuYnJhaW50cmVlZ2F0ZXdheS5jb206NDQzL21lcmNoYW50cy84bjltdmN2amp5NDJkNm5rL2NsaWVudF9hcGkiLCJlbnZpcm9ubWVudCI6InByb2R1Y3Rpb24iLCJtZXJjaGFudElkIjoiOG45bXZjdmpqeTQyZDZuayIsImFzc2V0c1VybCI6Imh0dHBzOi8vYXNzZXRzLmJyYWludHJlZWdhdGV3YXkuY29tIiwiYXV0aFVybCI6Imh0dHBzOi8vYXV0aC52ZW5tby5jb20iLCJ2ZW5tbyI6Im9mZiIsImNoYWxsZW5nZXMiOlsiY3Z2IiwicG9zdGFsX2NvZGUiXSwidGhyZWVEU2VjdXJlRW5hYmxlZCI6ZmFsc2UsImFuYWx5dGljcyI6eyJ1cmwiOiJodHRwczovL2NsaWVudC1hbmFseXRpY3MuYnJhaW50cmVlZ2F0ZXdheS5jb20vOG45bXZjdmpqeTQyZDZuayJ9LCJhcHBsZVBheSI6eyJjb3VudHJ5Q29kZSI6IlVTIiwiY3VycmVuY3lDb2RlIjoiVVNEIiwibWVyY2hhbnRJZGVudGlmaWVyIjoibWVyY2hhbnQuY29tLnZzaHJlZC5WU2hyZWQiLCJzdGF0dXMiOiJwcm9kdWN0aW9uIiwic3VwcG9ydGVkTmV0d29ya3MiOlsidmlzYSIsIm1hc3RlcmNhcmQiLCJhbWV4IiwiZGlzY292ZXIiXX0sInBheXBhbEVuYWJsZWQiOmZhbHNlfQ==',
						container: '#card-element'
					}, function (createErr, instance) {
						braintreeCreationAttempts++;

						if (createErr) {
							if (braintreeCreationAttempts > 5) {
								checkout.toggleErrorMessage('Unexpected error: ' + createErr);
								throw new Error(createErr);
							} else {
								braintreeProvider.init();
							}

							return;
						}

						

						if($('.expand-area-2 .expand-area-title').text().includes('Payment')) {
							$('.expand-area-2').find('.next-step').unbind('click');
						} else if($('.expand-area-3 .expand-area-title').text().includes('Payment')) {
							$('.expand-area-3').find('.next-step').unbind('click');
						}

						if($(button).attr('type') === 'submit') {
							$(button).attr('type', 'button')
							checkoutForm = $(button).parents('form');
						}

						button.addEventListener('click', function () {
							return instance.requestPaymentMethod(requestPaymentMethod);
						});
						
						instance.on('paymentMethodRequestable', function(event) {
							
							if(event.paymentMethodIsSelected) {
								
								if (instance.off) {
									instance.off('noPaymentMethodRequestable', hideSummarySection());
								}
								instance.requestPaymentMethod(requestPaymentMethod);
								showSummarySection();
								
								checkoutForm && checkoutForm.submit();
								instance.on('noPaymentMethodRequestable', hideSummarySection());
							}
						});
					});
				}
			};

			braintreeProvider.init();

			checkout.init(braintreeProvider, '#billing-form', '.billing-item');

		})()
	</script>
<script>
		const emailFormat = /^([a-zA-Z0-9_.+-])+\@(([a-zA-Z0-9-])+\.)+([a-zA-Z0-9]{2,4})+$/;
		const phoneFormat = /^\d{10,14}$/;

		function getParameterByName(name, url) {
			if (!url) {
				url = window.location.href;
			}

			name = name.replace(/[\[\]]/g, "\\$&");

			const regex = new RegExp("[?&]" + name + "(=([^&#]*)|&|#|$)");
			const results = regex.exec(url);

			if (!results) {
				return null;
			}

			if (!results[2]) {
				return '';
			}

			return decodeURIComponent(results[2].replace(/\+/g, " "));
		}

		$(document).ready(function () {
			// Form 01
			$('.continue-button').on('click', function () {
				if (checkout.$firstName.val() !== '' && checkout.$lastName.val() !== '' && emailFormat.test(checkout.$email.val())) {
					$('.from-two').show();
					$('.from-three').show();
					$('#name-email-error').css('display', 'none');

					trkCheckout(checkout.$email.val(), checkout.$firstName.val(), checkout.$lastName.val());
				} else {
					if (checkout.$firstName.val() === '') {
						$('#name-email-error-text').html('Enter your first name');
					} else if (checkout.$lastName.val() === '') {
						$('#name-email-error-text').html('Enter your last name');
					} else if (!emailFormat.test(checkout.$email.val())) {
						$('#name-email-error-text').html('Enter a valid email address');
					}

					$('#name-email-error').css('display', 'block');
				}
			});

			// Form 02
			$('.expand-area-1').find('.next-step').on('click', function () {
				if (jQuery.trim($('#name').val()) === '') {
					$('#name-error').show();

					return false;
				} else {
					$('#name-error').hide();
				}

				if (!emailFormat.test($('#email').val())) {
					$('#email-error').show();

					return false;
				} else {
					$('#email-error').hide();
				}

				if ($('#phone').prop('required') && !phoneFormat.test($('#phone').val().replace(/\D/g,''))) {
					$('#phone-error').show();

					return false;
				} else {
					$('#phone-error').hide();
				}

				$('.expand-area-2').find('.expand-inputs.close-input').slideDown();

				let first_name = '';
				let last_name = '';
				let _name = $('#name').val().split(' ');

				if (_name.length > 0) {
					first_name = _name.shift();
				} else {
					first_name = $('#name').val();
				}

				if (_name.length > 0) {
					last_name = _name.join(' ');
				} else {
					last_name = '';
				}

				trkCheckout($('#email').val(), first_name, last_name);
			});

			$('.expand-area-2').find('.next-step').on('click', function () {

				// Bad patch for order forms with only 2 form dropdowns
				// If there isn't a third dropdown, assume it is a 2 dropdown form and skip this
				if (!document.querySelector('.expand-area-3')) {
					return;
				}

				const passesValidation = [
					'#shipping_name',
					'#shipping_street1',
					// '#shipping_street2',
					'#shipping_city',
					'#shipping_state',
					'#shipping_postal_code',
					'#shipping_country',
					'#shipping_phone'
				].map(field => {
					if (jQuery.trim($(field).val()) === '') {
						$(field + '-error').show();

						return false;
					} else {
						$(field + '-error').hide();

						return true;
					}
				}).reduce((prev, cur) => prev && cur, true);

				if (!passesValidation) {
					return false;
				}

				// We'll be doing this in the "received a good payment method" event from Braintree/Stripe
				// $('.expand-area-3').find('.expand-inputs.close-input').slideDown();
			});

			$('input[name=special_offer]').on('change', function () {
				if ($(this).prop('checked')) {
					checkout.$item.data('special-offer', $(this).val());

					
					
					
				} else {
					checkout.$item.removeData('special-offer');
				}
			});
		});

		function trkCheckout(email, first_name, last_name) {
			const lists = {"femaleGetToned":11,"femaleSkinnyFat":11,"maleGetRipped":12,"maleSkinnyFat":12,"maleFatLoss":13,"femaleFatLoss":14,"maleHardGainer":15};
			let segment = '';

			if (segment === '') {
				segment = getParameterByName('segment');
			}

						if (segment !== '' && lists[segment] !== undefined) {
				let contact = {
					email: email
				};

				if (first_name) {
					contact.first_name = first_name;
				}

				if (last_name) {
					contact.last_name = last_name;
				}

				$.post('/maropost/subscribe/' + lists[segment], {contact: contact, _token: $('[name=csrf-token]').prop('content')});
			}
					}

		checkout.$email.focusout(function () {
			emailAjax(checkout.$email.val());
		});

		/**
		 * Confirm email is valid.
		 *
		 * @param  email
		 */
		function emailAjax(email) {
			
			if(!emailFormat.test(email)) {
				$('#email-error').show();
				$('#email-error-text').html("Please Enter a Valid Email Address");
				return;
			}
			$.ajax({
				url: '/email-checker',
				method: 'POST',
				data: {
					email: email,
					_token: $('[name=csrf-token]').prop('content'),
				},
				success: function (response) {
					if (response.valid === false) {
						$('#email-error').show();
						$('#email-error-text').html("Looks like your email <i>might</i> be invalid. If you're sure it's good, no worries, you can still place your order.");
					} else {
						$('#email-error').hide();
					}
				},
				error: function (error) {
					$('#name-email-error').show();
					$('#name-email-error').html(error.data);
				}
			});
		}
	</script>
<script>
        (function () {
            const $billingItem = $('.billing-item');

            dataLayer.push({
                'event': 'EEaddToCart',
                'ecommerce': {
                    'currencyCode': 'USD',
                    'add': {
                        'products': [{
                            'id': $billingItem.data('id'),
                            'name': $billingItem.data('description'),
                            'price': $billingItem.data('price'),
                            'brand': 'V Shred',
                            'category': $billingItem.data('category'),
                            'quantity': 1
                        }]
                    }
                }
            });

            dataLayer.push({
                'event': 'EEcheckoutStart',
                'ecommerce': {
                    'checkout': {
                        'actionField': {
                            'step': 1,
                            'option': 'Product Page'
                        },
                        'products': [{
                            'id': $billingItem.data('id'),
                            'name': $billingItem.data('description'),
                            'price': $billingItem.data('price'),
                            'brand': 'V Shred',
                            'category': $billingItem.data('category'),
                            'quantity': 1
                        }]
                    }
                }
            });

            // Step 1 - On Page Load of Payment Page
            let gtmCheckoutTriggered = false;
            const emailValidationFormat = /^([a-zA-Z0-9_.+-])+\@(([a-zA-Z0-9-])+\.)+([a-zA-Z0-9]{2,4})+$/;

            $('.next-step.button-one').on('click', function () {
                if (!gtmCheckoutTriggered && emailValidationFormat.test($('#billing-form input[name=email]').val()) && jQuery.trim($('#name').val()) !== '') {
                    gtmCheckoutTriggered = true;

                    dataLayer.push({
                        'event': 'EEcheckoutContact',
                        'ecommerce': {
                            'checkout': {
                                'actionField': {
                                    'step': 2,
                                    'option': 'Contact Information'
                                },
                                'products': [{
                                    'id': $billingItem.data('id'),
                                    'name': $billingItem.data('description'),
                                    'price': $billingItem.data('price'),
                                    'brand': 'V Shred',
                                    'category': $billingItem.data('category'),
                                    'quantity': 1
                                }]
                            }
                        }
                    });
                }
            });

            // Step 2 - When Next Step is clicked and information was valid for Step 1
            $('.next-step.button-two').one('click', function () {
                dataLayer.push({
                    'event': 'EEcheckoutPayment',
                    'ecommerce': {
                        'checkout': {
                            'actionField': {
                                'step': 2,
                                'option': 'Payment Information'
                            },
                            'products': [{
                                'id': $billingItem.data('id'),
                                'name': $billingItem.data('description'),
                                'price': $billingItem.data('price'),
                                'brand': 'V Shred',
                                'category': $billingItem.data('category'),
                                'quantity': 1
                            }]
                        }
                    }
                });
            });

            // Step 3 - When Next Step is clicked for Step 2
            $('.next-step.button-three, #submit-order').one('click', function () {
                dataLayer.push({
                    'event': 'EEcheckoutConfirmation',
                    'ecommerce': {
                        'checkout': {
                            'actionField': {
                                'step': 3,
                                'option': 'Order Confirmation'
                            },
                            'products': [{
                                'id': $billingItem.data('id'),
                                'name': $billingItem.data('description'),
                                'price': $billingItem.data('price'),
                                'brand': 'V Shred',
                                'category': $billingItem.data('category'),
                                'quantity': 1
                            }]
                        }
                    }
                });
            });
        })();
    </script>
<script type="application/javascript">
        $('#billing-form').on('change', 'input[type=checkbox][name=special_offer]', () => {
            const $orderSummaryTotal = $('#order-summary-total');
            const $orderSummarySpecialOffer = $('#order-summary-special-offer');
            const formatter = new Intl.NumberFormat('en-US', {
                style: 'currency',
                currency: 'USD',
            });

            if ($('input[type=checkbox][name=special_offer]').prop('checked')) {
                $orderSummaryTotal.text(formatter.format($orderSummaryTotal.data('base-total') + $orderSummarySpecialOffer.data('price')));
                $orderSummarySpecialOffer.show();
            } else {
                $orderSummaryTotal.text(formatter.format($orderSummaryTotal.data('base-total')));
                $orderSummarySpecialOffer.hide();
            }
        });
    </script>
<script type="application/javascript">
    // Add internal ref links.
    setTimeout(function() {
        var getParameterByName = function(name, url) {
            if (!url) url = window.location.href;
            name = name.replace(/[\[\]]/g, "\\$&");
            var regex = new RegExp("[?&]" + name + "(=([^&#]*)|&|#|$)"),
                results = regex.exec(url);
            if (!results) return null;
            if (!results[2]) return '';
            return decodeURIComponent(results[2].replace(/\+/g, " "));
        }

        $('a').each(function(e) {
            if ($(this).parents('.phpdebugbar, .phpdebugbar-openhandler').length > 0) {
                return;
            }

            var href = $(this).prop('href');

            if (href !== 'undefined' && href.indexOf('#') === -1 && window.location.pathname.indexOf('sp/survey') === -1 && href.indexOf('javascript:') === -1) {
                var ref = '';

                if (window.location.pathname === '/') {
                    ref = 'ref=home';
                } else {
                    ref = 'ref=' + encodeURIComponent(window.location.pathname.substring(1));
                }

                var currentRefValue = getParameterByName('ref', href);
                if (!currentRefValue) {
                    $(this).prop('href', href + (href.indexOf('?') > -1 ? '&' : '?') + ref);
                }
            }
        });
    }, 100);
</script>


<script type="text/javascript">
    (function(){"use strict";var e=null,b="4.0.0",
        n="23292",
        additional="",
        t,r,i;try{t=top.document.referer!==""?encodeURIComponent(top.document.referrer.substring(0,2048)):""}catch(o){t=document.referrer!==null?document.referrer.toString().substring(0,2048):""}try{r=window&&window.top&&document.location&&window.top.location===document.location?document.location:window&&window.top&&window.top.location&&""!==window.top.location?window.top.location:document.location}catch(u){r=document.location}try{i=parent.location.href!==""?encodeURIComponent(parent.location.href.toString().substring(0,2048)):""}catch(a){try{i=r!==null?encodeURIComponent(r.toString().substring(0,2048)):""}catch(f){i=""}}var l,c=document.createElement("script"),h=null,p=document.getElementsByTagName("script"),d=Number(p.length)-1,v=document.getElementsByTagName("script")[d];if(typeof l==="undefined"){l=Math.floor(Math.random()*1e17)}h="dx.steelhousemedia.com/spx?"+"dxver="+b+"&shaid="+n+"&tdr="+t+"&plh="+i+"&cb="+l+additional;c.type="text/javascript";c.src=("https:"===document.location.protocol?"https://":"http://")+h;v.parentNode.insertBefore(c,v)})()
</script></body>
</html>